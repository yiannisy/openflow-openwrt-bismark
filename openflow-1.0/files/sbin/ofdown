#!/bin/sh
# Copyright (C) 2006 OpenWrt.org

. /etc/functions.sh
[ $# = 0 ] && { echo "  $0 <group>"; exit; }
[ "x$1" = "x-a" ] && {
	config_cb() {
		[ ofswitch != "$1" -o -z "$2" ] || eval "$0 $2"
	}
	config_load openflow
	exit
}

include /lib/openflow
scan_ofinterfaces

cfg=$1
debug "### ifdown $cfg ###"

config_get proto "$cfg" proto
[ -z "$proto" ] && { echo "interface not found."; exit; }

config_get dp "$cfg" dp

#iface=`dpctl show ${dp} |awk '/^ LOCAL.*addr/ {split($1,a,"[()]");print a[2]}'`

[ "static" = "$proto" ] && {
	env -i ACTION="ifdown" INTERFACE="$cfg" DEVICE="$iface" PROTO=static /sbin/hotplug-call "oface" &
}

# call ofswitch stop handler
( type "stop_ofinterface_$proto" ) >/dev/null 2>/dev/null && eval "stop_ofinterface_$proto '$cfg'"

# make sure all locks are removed
for lock in "/var/lock/secchan-$iface" "/var/lock/dhcp-$iface"; do
	[ -f "$lock" ] && {
		lock -u "$lock"
		sleep 1
	}
done

# kill active ppp daemon and other processes
ifname=$iface
pids="$(head -n1 -q /var/run/${ifname}.pid /var/run/secchan-${iface}.pid 2>/dev/null)"
for pid in $pids; do 
	[ -d "/proc/$pid" ] && {
		kill $pid
		[ -d "/proc/$pid" ] && {
			sleep 1
			kill -9 $pid 2>/dev/null >/dev/null
		}
	}
done
rm -f /var/run/${ifname}.pid /var/run/ofprotocol-${ifname}.pid

config_get ifname "$cfg" ifname
config_get device "$cfg" device

[ ."$device" != ."$ifname" ] || device=
for dev in $ifname $device; do
	ifconfig "$dev" 0.0.0.0 down >/dev/null 2>/dev/null
done

# remove_ofswitch "$cfg"

# remove the ofswitch's network state
uci_revert_state openflow "$1"

